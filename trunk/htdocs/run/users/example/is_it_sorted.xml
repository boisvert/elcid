<elcid>

<source>

function sorted(numbers) { 
   var result = false;

   return result;
}

</source>

<iteration>

<start>
   <comment>In this example we will write a function to check whether an array is in descending order.
If the array is in descending order, it should return true; otherwise, false.</comment>
   <test
      lang = "jstest"
      call = "sorted"
      in = "[[[673,623,63,54,34,23,9,4,1]],[[1000,2000]]]"
      out = "[true,false]"
   />
</start>

<move>
   <linenumber>4</linenumber>
   <colnumber>0</colnumber>
</move>

<insert>
   <chars>   if (numbers[0]&gt;=numbers[1]) {result=true;}</chars>
   <comment>We'll start by checking the first two numbers are sorted.</comment>
</insert>

<move>
   <linenumber>4</linenumber>
   <colnumber>29</colnumber>
</move>

<insert>
   <chars> &amp;&amp; numbers[1]&gt;=numbers[2]</chars>
   <comment>This approach can work - but it is not general.</comment>
</insert>

<move>
   <linenumber>3</linenumber>
   <colnumber>22</colnumber>
</move>

<insert>
   <line />
</insert>

<insert>
   <chars>   for (var i=0; i&lt;numbers.length; i++) {</chars>
   <comment>With a loop we can check the whole array.</comment>
</insert>

<move>
   <linenumber>5</linenumber>
   <colnumber>0</colnumber>
</move>

<insert>
   <chars>   </chars>
</insert>

<move>
   <linenumber>6</linenumber>
   <colnumber>0</colnumber>
</move>

<insert>
   <line>   }</line>
</insert>

<move>
   <linenumber>5</linenumber>
   <colnumber>18</colnumber>
</move>

<select>
   <chars>1</chars>
</select>

<insert>
   <chars>i</chars>
</insert>

<move>
   <linenumber>5</linenumber>
   <colnumber>30</colnumber>
</move>

<select>
   <chars>27</chars>
</select>

<insert>
   <chars>i+1</chars>
   <comment>This looks promising, but check the loop boundaries.</comment>
</insert>

<move>
   <linenumber>4</linenumber>
   <colnumber>33</colnumber>
   <comment>There is an off-by-one error,
because we are working on pairs of numbers.</comment>
</move>

<insert>
   <chars>-1</chars>
</insert>

<move>
   <linenumber>3</linenumber>
   <colnumber>16</colnumber>
   <comment>Test this version: it still doesn't work.</comment>
</move>

<select>
   <chars>5</chars>
   <comment>We should actually check when the array is *not* sorted.</comment>
</select>

<insert>
   <chars>true</chars>
</insert>

<move>
   <linenumber>5</linenumber>
   <colnumber>20</colnumber>
</move>

<select>
   <chars>2</chars>
</select>

<insert>
   <chars>&lt;</chars>
</insert>

<move>
   <linenumber>5</linenumber>
   <colnumber>43</colnumber>
</move>

<select>
   <chars>4</chars>
</select>

<insert>
   <chars>false</chars>
   <comment />
</insert>

</iteration>

</elcid>
